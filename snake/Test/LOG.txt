进度日志

预处理: (Last Update: 2019-6-25 18:23)

    - 下载游戏代码
        - 代码存储于Code文件夹中

    - 下载SFML库，在vscode及系统中完成配置
        - 添加路径变量为C:/SFML/lib

    - 测试SFML库
        - 测试命令在test.txt中，测试文件为test_sfml.cpp

    - 执行游戏测试命令
        - 命令在test.txt中
        - 无法使用pickup.aiff文件

    - 将Sounds文件夹中的文件pickup.aiff格式转换为pickup.wav
        - 成功运行游戏，没有出现错误
        - 编译时提示某几行代码已被弃用

    - 查看SFML/Graphics/Text.hpp中的第210行，将使用方法setColor的两处更改为使用新标准下的setFillColor
        - 成功编译，没有出现警告

    - 使用vscode的预设代码规范对所有文件进行了代码规范化操作，更改了代码细节，不影响运行结果

    - 初步探索SFML库中关于鼠标控制的操作
        - 成功运行TEST_MOUSE.cpp文件

    - 对所有文件进行了文字注释，以便读懂该项目

version 1：

    version 1.0: (Last Update: 2019-6-25 18:54)

        - 完成用鼠标控制蛇运动的功能
            - 在Snake.cpp中的handleInput方法中添加有关sf::Mouse的控制
            - 在对应的move和grow方法中添加鼠标控制的情况

        - 实现的过程中注意了getPosition函数的使用，最开始使用的是返回全局位置的定义，导致出错

        - 还需要考虑会与自身碰撞的情况，考虑处理checkSelfCollisions方法中getGlobalBound函数的使用

    version 1.1: (Last Update: 2019-6-26 18:37)

        - 尝试实现暂停功能
            - 运行时有bug，暂停会导致程序崩溃
            - 实验表明使用while死循环容易导致程序崩溃，尽量不要使用

        - 实现方向向量为0时操作无效功能
            - 在Snake.cpp中的handleInput方法中增加了方向向量为0时的判断条件
            - 仍然存在bug
        
        - 鼠标控制时暂未实现碰撞判定
            - 一直按着屏幕会导致蛇缩成一团

        - 成功实现暂停功能
            - 按下P键暂停
            - 按下R键结束暂停
            - 暂未解决暂停界面时其他操作失效的情况

        - 成功实现同一按键控制暂停功能
            - 按下P键暂停
            - 再次按下P键结束暂停

        - 成功实现暂停时其他操作失效的功能
            - 增加了一个对pause_条件的判断

    version 1.2: (Last Update: 2019-6-26 19:11)

        - 初步完成方向向量为0时操作无效功能
            - 改用差值小于5.f的判断条件判断无效操作

    version 1.3: (Last Update: 2019-6-26 19:40)

        - 实现退出功能
            - 在GameScreen.cpp中添加判断条件
            - 按下Q键退出游戏

    version 1.4: (Last Update: 2019-6-26 19:56)

        - 实现了碰到边界死亡的功能
            - 修改Snake类中checkEdgeCollisions方法的定义

version 2:

    version 2.0: (Last Update: 2019-6-26 22:11)

        - 实现水果五种颜色的随机生成
            - 构造水果时使用随机数引擎得到0至1之间的小数，按照给定比例选择颜色

        - 优化了随机生成颜色的代码
            - 将代码放置在GameScreen类的generateFruit方法中
            - 将同一个随机数引擎应用至颜色和位置中，避免发生种子错误

    version 2.1: (Last Update: 2019-6-28 17:14)

        - 再次优化了随机生成颜色的代码
            - 将颜色属性放到了Fruit类中

    version 2.2: (Last Update: 2019-6-28 18:13)

        - 实现了按不同颜色水果增加蛇长度的功能
            - 在Snake类的grow方法中添加了颜色参数

    version 2.3: (Last Update: 2019-6-28 21:47)

        - 实现了初始界面的水果设置
            - 初始水果数量为12
            - 仅能按概率生成不同颜色水果
            - 不能保持水果的数量比例

        - 成功保持水果的数量比例
            - 吃掉水果的颜色和即将生成水果的颜色相同

        - 优化了保持水果数量比例的代码
            - 即将生成水果的颜色根据吃掉水果的颜色决定
            - 吃掉红蓝绿水果会生成红蓝绿水果
            - 吃掉棕黑水果会生成棕黑水果

    version 2.4: (Last Update: 2019-6-28 23:32)

        - 尾巴的问题
            - 蛇会向移动方向的反方向增加长度

        - 解决了尾巴的问题
            - 计算向量的差值增长蛇尾
            - 蛇的增长变得更顺滑

        - 优化了水果的外观
            - 添加了外框线
            - 设定了框线宽度

version 3:

    version 3.0: (Last Update: 2019-6-29 1:23)

        - 成功绘制单色背景
            - 设定背景为白色

        - 成功设置背景颜色的转换
            - 按1转换为白色
            - 按2转换为黑色
            - 按3转换为褐色
            - 默认背景是白色

        - 稍微修改了黑白两种颜色

    version 3.1: (Last Update: 2019-6-29 2:39)

        - 成功实现网格线的绘制
            - 使用长方形代替直线

        - 成功实现网格线的显示与关闭
            - 按G显示网格
            - 再次按G取消显示网格

        - 考虑是否需要将水果固定到网格线上

        - 考虑是否允许蛇的逆行

version 4:

    version 4.1: (Last Update: 2019-6-29 16:08)

        - 成功用圆形和长方形组合形成了蛇的节点
            - 黄色圆形叠加黑色正方形组成蛇的节点

        - 导入了蛇头

        - 成功将蛇头与蛇身渲染至画布
            - 存在不能转向的问题

    version 4.2: (Last Update: 2019-6-29 17:08)

        - 编写TextureManager类用于存储texture
            - sprite对象不保存texture，只保存texture的指针
            - 避免指针带来的多次传值

    version 4.3: (Last Update: 2019-6-29 18:13)

        - 实现了蛇头和蛇身随移动方向旋转的功能

    version 4.4: (Last Update: 2019-6-29 19:58)

        - 将水果固定在网格上
            - 修改了生成水果位置的函数

        - 旋转的效果自带禁止逆行功能

        - 键盘控制蛇时开启自身碰撞检测
            - 一旦使用鼠标控制则关闭自身碰撞检测

        - 取消了整个游戏的自身碰撞判定
            - 开启自身碰撞判定会导致不可预知的bug

        - 最大化窗口会导致鼠标控制出现bug
            - 用键盘控制则无问题

目前已实现功能:

    - 添加了鼠标控制贪吃蛇的操作
        - 单位时间运行距离为1个单位(10.f)
        - 一直按着鼠标且蛇头到达光标处时，贪吃蛇暂停移动
        - 点按蛇头处不改变蛇的运动方向

    - 实现了暂停功能
        - 暂停时其他操作无效，退出、切换背景、显示网格除外

    - 实现了退出功能
        - 直接跳转至游戏结束界面

    - 实现了碰边死亡功能
        - 暂时取消了自身碰撞死亡的限制

    - 实现了随机生成水果颜色的功能
        - 随机生成五种颜色水果

    - 实现了保持水果颜色比例的功能
        - 游戏中颜色比例固定

    - 实现了背景的显示

    - 实现了背景的切换
        - 允许切换显示三种颜色的背景

    - 实现了网格的显示

    - 实现了网格的切换
        - 允许控制是否显示网格

    - 实现了蛇头与蛇身的绘制
        - 成功载入游戏中

    - 实现了蛇头与蛇身的旋转
        - 随移动方向旋转

    - 实现了水果固定在网格上的效果

希望能实现的功能: (由于时间问题未能一一实现)

    - 贪吃蛇的加速
        - 考虑提高帧速TimePerFrame
        - 设置几档速度(高、中、低等)进行操作

    - 界面设计优化
        - 按下暂停键时出现暂停界面
        - 按下退出键时出现确认界面
        - 按下切换背景键时显示当前颜色
        - 按下网格键时显示网格状态

    - 解决拾起水果时的尾部显示问题
        - 主要是方向的设置

    - 增加更丰富的背景图片

    - 更改水果的呈现

    - 吃到灰色水果减小蛇的长度

    - 刷新水果时不出现在蛇的身体里